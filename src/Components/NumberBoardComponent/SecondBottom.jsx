import React from 'react';

function SecondBottom({addCom, totalChipValues, updateTotalChipValue, setTotalChipValues,singleChipValue, enableChip}){
    const prefix = "secondBottom"
    const arrayofSecondBottom = ['1 to 12', '13 to 24', '25 to 36'];

    //Update totalChipValue locally, useState is asynchronous, the totalChipValue 
    //generated by setTotalChipValue can not be immidiately updated
    const secondBottomClick = (index, event) => {
        if(enableChip === true){
        const id = `${prefix}_${index}`;
        const selectedNum = `${index}` == 0 ? Array.from({length: 12}, (_, i) => i + 1)
                   :`${index}` == 1 ? Array.from({length: 12}, (_, i) => i + 13)
                   : Array.from({length: 12}, (_, i) => i + 25)
        const odd = 2;
        const totalChipValue = (totalChipValues[id] || 0) + singleChipValue;
        updateTotalChipValue(id);
        addCom(selectedNum, id, odd, totalChipValue, event);
        }else{
           return;
        }
    };

    const removeSecondBottomClick = (index, event) => {
        event.preventDefault(); // Prevent the default context menu
        if(enableChip === true){
        const id = `${prefix}_${index}`;
        const odd = 2;
        const selectedNum = `${index}` == 0 ? Array.from({length: 12}, (_, i) => i + 1)
                    :`${index}` == 1 ? Array.from({length: 12}, (_, i) => i + 13)
                    : Array.from({length: 12}, (_, i) => i + 25)
        const totalChipValue = totalChipValues[id] || 0;
        addCom(selectedNum, id, odd, totalChipValue, event);
        // Toggle chip visibility based on right-click event
        if (event.button === 2 && totalChipValue > 0) {
            const updatedTotalChipValues = { ...totalChipValues }; // Copy the state
            updatedTotalChipValues[id] = 0; // Set chip value to 0
            setTotalChipValues(updatedTotalChipValues); // Update the state
        }
        }else{
           return;
        }
    };

    return(
        <div className="secondBottom">
            {
                 arrayofSecondBottom.map((num, index)=>(
                    <div key={index} className='secondBottomBlock' id={`secondBottom_${index}`} 
                    onClick={(event)=>secondBottomClick(index,event)} 
                    onContextMenu={(event)=>{removeSecondBottomClick(index, event)}}
                    >
                     <div className='secondBottomBlockCon'> {num}</div>
                     {totalChipValues[`${prefix}_${index}`] > 0 && 
                     <div className='chip'>{totalChipValues[`${prefix}_${index}`]}</div>}
                    </div> 
                ))
            }
        </div>
    )
}

export default SecondBottom;